{"version":3,"sources":["components/Header/index.js","assets/money.png","assets/dollar.png","assets/tooth.png","components/PsychoTest/NewYearMoney/index.js","components/Main/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","adUnit","NewYearMoney","match","useState","stage","setStage","age","setAge","secret","setSecret","onClickAge","setTimeout","getIp","a","publicIp","v4","ip","lastIp","Number","split","Math","floor","random","calculateMoney","rand","today","Date","date","getDate","result","useEffect","document","title","className","src","MoneyImg","height","width","onClick","type","color","text","speed","eraseDelay","typingDelay","ToothImg","DollarImg","arr","style","fontSize","fontWeight","marginBottom","calculateResultText","onCopy","alert","Main","basename","process","exact","path","component","Footer","href","target","App","script","createElement","async","body","appendChild","removeChild","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.658b9869.chunk.js","sourcesContent":["import './index.css';\nimport AdSense from 'react-adsense';\nimport AdfitWebComponent from 'react-adfit-web-component'\n\nfunction Header() {\n  return (\n    <header>\n      {/* <AdSense.Google\n        client='ca-pub-8890383931402371'\n        slot='3747311734'\n        style={{width: 522, height: 90, display: \"inline-block\"}}\n      /> */}\n      <AdfitWebComponent\n        adUnit=\"DAN-13GKQ9fa1KfsuQiY\"\n      />\n    </header>\n  )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/money.2db9ebbb.png\";","export default __webpack_public_path__ + \"static/media/dollar.c715e3fb.png\";","export default __webpack_public_path__ + \"static/media/tooth.48a65d2d.png\";","import './index.css';\nimport MoneyImg from '../../../assets/money.png';\nimport DollarImg from '../../../assets/dollar.png';\nimport ToothImg from '../../../assets/tooth.png';\nimport { useState, useEffect } from 'react';\nimport publicIp from 'public-ip';\nimport Loader from \"react-loader-spinner\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nfunction NewYearMoney({match}) {\n  const [ stage, setStage ] = useState(0);\n  const [ age, setAge ] = useState(null);\n  const [ secret, setSecret ] = useState(null);\n  const createKakaoButton = () => {\n    console.log(4444444)\n    // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능합니다\n    if (window.Kakao) {\n      const kakao = window.Kakao\n      // 중복 initialization 방지\n      if (!kakao.isInitialized()) {\n        // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n        kakao.init(\"9e70695ec98201ad6dd4f3a944e9d211\")\n      }\n      kakao.Link.createDefaultButton({\n        // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n        container: '#kakao-link-btn',\n        objectType: 'feed',\n        content: {\n          title: '타이틀',\n          description: '#리액트 #카카오 #공유버튼',\n          imageUrl: 'IMAGE_URL', // i.e. process.env.FETCH_URL + '/logo.png'\n          link: {\n            mobileWebUrl: window.location.href,\n            webUrl: window.location.href,\n          },\n        },\n        social: {\n          likeCount: 77,\n          commentCount: 55,\n          sharedCount: 333,\n        },\n        buttons: [\n          {\n            title: '웹으로 보기',\n            link: {\n              mobileWebUrl: window.location.href,\n              webUrl: window.location.href,\n            },\n          },\n          {\n            title: '앱으로 보기',\n            link: {\n              mobileWebUrl: window.location.href,\n              webUrl: window.location.href,\n            },\n          },\n        ],\n      })\n    }\n  }\n\n  const onClickStartButton = () => {\n    setStage(1);\n  }\n\n  const onClickAge = (age) => {\n    setAge(age);\n    setStage(2);\n    setTimeout(() => {\n      setStage(3);\n    }, 3000);\n  }\n\n  const getIp = (async () => {\n    try {\n      let result = 0;\n      let ip = await publicIp.v4();\n      let lastIp = Number(ip.split(\".\")[3]);\n      setSecret(lastIp);\n\n      // ip.split(\".\").map((n) => {\n      //   result += Number(n);\n      // })\n      // setSecret(result);\n    } catch(err) {\n      setSecret(Number(Math.floor(Math.random() * 100)));\n    }\n  })\n\n  const calculateMoney = () => {\n    const rand = Number(Math.floor(Math.random() * 100));\n    let today = new Date();\n    let date = Number(today.getDate());\n\n    if (age == 40) {\n      return\n    }\n\n    if (secret == 17) {\n      return 150\n    } else if (secret === date) {\n      return 200\n    } else if (secret === rand) {\n      return 300\n    }\n    let result = Math.floor(secret / rand * age);\n    if (result > 300) {\n      return result - 150\n    }\n    return result\n  }\n\n  const calculateResultText = () => {\n    const rand = Math.floor(Math.random() * 10);\n    const arr = [\n      [\"요즘도 새뱃돈으로 장난감 사시나요?\", \"삼성전자 몰빵이 답입니다.\"],\n      [\"코로나로 뒤숭숭한 요즘 부모님에게\", \"건강식품이라도 보내드리는건 어떨까요?\"],\n      [\"올 한해는 꼭 헬스장을 등록하여\", \"건강한 내 자신을 만들어봐요!\"],\n      [\"당신이 얼마나 행복한가는\", \"당신의 감사의 깊이에 달려있습니다.\"],\n      [\"새해복 많이x100\", \"받으세요~\"],\n      [\"혹시...\", \"돈 복사기가 현존한다는 소식 들으셨나요?\"],\n      [\"올해는 기필코\", \"3대 500 달성을 기원합니다.\"],\n      [\"이돈으로 치킨을 시키면\", \"몇마리일까요?\"],\n      [\"하고싶은일이 있다면\", \"미루지말고 올해는 꼭 도전해봐요!\"],\n      [\"당신은 존재하나만으로\", \"충분히 가치있는 사람입니다.\"],\n    ]\n\n    if (age == 10) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>{calculateMoney()} 만원</p>\n          <span style={{fontSize: 20, marginBottom: 10}}>{arr[rand][0]}</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>{arr[rand][1]}</span>\n        </>\n      )\n    } else if (age == 20) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>{calculateMoney()} 만원</p>\n          <span style={{fontSize: 20, marginBottom: 10}}>{arr[rand][0]}</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>{arr[rand][1]}</span>\n        </>\n      )\n    } else if (age == 30) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>{calculateMoney()} 만원</p>\n          <span style={{fontSize: 20, marginBottom: 10}}>{arr[rand][0]}</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>{arr[rand][1]}</span>\n        </>\n      )\n    } else if (age == 40) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>0원</p>\n          <span style={{fontSize: 20}}>이젠..주셔야죠?</span>\n        </>\n      )\n    }\n  }\n\n  const calculateResultImg = () => {\n    if (age == 40) {\n      return <img src={ToothImg} height={200} width={250}/>\n    }\n    return <img src={DollarImg} height={200} width={250}/>\n  }\n\n  useEffect(() => {\n    document.title = \"세뱃돈 예측기\"\n    getIp();\n    // createKakaoButton();\n  }, []);\n\n  return (\n    <section>\n      <div className=\"section\">\n        { stage === 0 ? (\n          <div className=\"first-stage\">\n            <span className=\"title-first\">내가 받을 세뱃돈은?</span>\n            <span className=\"title-second\">올해는 얼마나 받을까..!</span>\n            <div className=\"section-body\">\n              <img src={MoneyImg} height={200} width={250}/>\n              <button className=\"button\" onClick={onClickStartButton}>세뱃돈 예측하기</button>\n            </div>\n          </div>\n        ) : [\n          stage === 1 ? (\n            <div className=\"second-stage\">\n              <span className=\"title-first\">나의 연령대는</span>\n              <div className=\"question-box\">\n                <div className=\"question\" onClick={() => onClickAge(10)}>\n                  1~19세\n                </div>\n                <div className=\"question\" onClick={() => onClickAge(20)}>\n                  20대\n                </div>\n                <div className=\"question\" onClick={() => onClickAge(30)}>\n                  30대\n                </div>\n                <div className=\"question\" onClick={() => onClickAge(40)}>\n                  40대 이상\n                </div>\n              </div>\n            </div>\n          ) : [\n            stage === 2 ? (\n              <div className=\"third-stage\">\n                <Loader\n                  type=\"TailSpin\"\n                  color=\"#00BFFF\"\n                  height={150}\n                  width={150}\n                  // timeout={3000} //3 secs\n                />\n                <ReactTypingEffect\n                  className=\"typing\"\n                  text={[\"예측중.....\"]}\n                  speed={200}\n                  eraseDelay={1000}\n                  typingDelay={100}\n                />\n              </div>\n            ) : (\n              <div className=\"result-stage\">\n                { calculateResultImg() }\n                { calculateResultText() }\n                <div className=\"result-btn-wrap\">\n                  <button className=\"retry-btn\" onClick={() => setStage(0)}>다시하기</button>\n                  <CopyToClipboard \n                    text={\"https://teamhide.github.io/psycho-test\"}\n                    onCopy={() => alert(\"링크 복사 완료!\")}\n                  >\n                    <button className=\"copy-btn\">링크복사</button>\n                  </CopyToClipboard>\n                </div>\n              </div>\n            )\n          ]\n        ]}\n      </div>\n    </section>\n  )\n}\n\nexport default NewYearMoney;","import { BrowserRouter,Route, Link,Switch } from \"react-router-dom\";\nimport NewYearMoney from '../PsychoTest/NewYearMoney';\nimport './index.css';\n\nfunction Main() {\n  return (\n    <div className=\"browser-wrap\">\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        {/* <Link to=\"/\">홈</Link><br/>\n        <Link to=\"/photo\">사진</Link><br/>\n        <Link to=\"/new-yar\">새뱃돈 얼마?</Link><br/> */}\n        <Switch className=\"abc\">\n          <Route exact path=\"/\" component={NewYearMoney}/> \n          <Route path=\"/new-year\" component={NewYearMoney}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n    </div>\n  )\n}\n\nexport default Main;","import './index.css';\nimport AdSense from 'react-adsense';\nimport AdfitWebComponent from 'react-adfit-web-component'\n\nfunction Footer() {\n  return (\n    <footer>\n      {/* <AdSense.Google\n        client='ca-pub-8890383931402371'\n        slot='3747311734'\n        style={{width: 522, height: 90, display: \"inline-block\"}}\n      /> */}\n      <AdfitWebComponent\n        adUnit=\"DAN-dkjyNszAMRwOChYh\"\n      />\n      <div className=\"copyright\">\n        Copyright <a href=\"https://github.com/teamhide\" target=\"_blank\">@teamhide</a>, all right reserved\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { useEffect } from 'react';\n\nfunction App() {\n  useEffect(() => {\n    const script = document.createElement('script')\n    script.src = 'https://developers.kakao.com/sdk/js/kakao.js'\n    script.async = true\n    document.body.appendChild(script)\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}