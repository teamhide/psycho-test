{"version":3,"sources":["components/Header/index.js","assets/money.png","assets/dollar.png","assets/tooth.png","components/PsychoTest/NewYearMoney/index.js","components/Main/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Google","client","slot","style","width","height","display","NewYearMoney","match","useState","stage","setStage","age","setAge","secret","setSecret","onClickAge","setTimeout","getIp","a","result","publicIp","v4","split","map","n","Number","Math","floor","random","calculateMoney","rand","date","Date","getDate","useEffect","document","title","className","src","MoneyImg","onClick","type","color","text","speed","eraseDelay","typingDelay","ToothImg","DollarImg","fontSize","fontWeight","marginBottom","onCopy","alert","Main","basename","process","exact","path","component","Footer","href","target","App","script","createElement","async","body","appendChild","removeChild","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eca54806.chunk.js","sourcesContent":["import './index.css';\nimport AdSense from 'react-adsense';\n\nfunction Header() {\n  return (\n    <header>\n      <AdSense.Google\n        client='ca-pub-8890383931402371'\n        slot='3747311734'\n        style={{width: 522, height: 90, display: \"inline-block\"}}\n      />\n    </header>\n  )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/money.2db9ebbb.png\";","export default __webpack_public_path__ + \"static/media/dollar.c715e3fb.png\";","export default __webpack_public_path__ + \"static/media/tooth.48a65d2d.png\";","import './index.css';\nimport MoneyImg from '../../../assets/money.png';\nimport DollarImg from '../../../assets/dollar.png';\nimport ToothImg from '../../../assets/tooth.png';\nimport { useState, useEffect } from 'react';\nimport publicIp from 'public-ip';\nimport Loader from \"react-loader-spinner\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nfunction NewYearMoney({match}) {\n  const [ stage, setStage ] = useState(0);\n  const [ age, setAge ] = useState(null);\n  const [ secret, setSecret ] = useState(null);\n  const createKakaoButton = () => {\n    console.log(4444444)\n    // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능합니다\n    if (window.Kakao) {\n      const kakao = window.Kakao\n      // 중복 initialization 방지\n      if (!kakao.isInitialized()) {\n        // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n        kakao.init(\"9e70695ec98201ad6dd4f3a944e9d211\")\n      }\n      kakao.Link.createDefaultButton({\n        // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n        container: '#kakao-link-btn',\n        objectType: 'feed',\n        content: {\n          title: '타이틀',\n          description: '#리액트 #카카오 #공유버튼',\n          imageUrl: 'IMAGE_URL', // i.e. process.env.FETCH_URL + '/logo.png'\n          link: {\n            mobileWebUrl: window.location.href,\n            webUrl: window.location.href,\n          },\n        },\n        social: {\n          likeCount: 77,\n          commentCount: 55,\n          sharedCount: 333,\n        },\n        buttons: [\n          {\n            title: '웹으로 보기',\n            link: {\n              mobileWebUrl: window.location.href,\n              webUrl: window.location.href,\n            },\n          },\n          {\n            title: '앱으로 보기',\n            link: {\n              mobileWebUrl: window.location.href,\n              webUrl: window.location.href,\n            },\n          },\n        ],\n      })\n    }\n  }\n\n  const onClickStartButton = () => {\n    setStage(1);\n  }\n\n  const onClickAge = (age) => {\n    setAge(age);\n    setStage(2);\n    setTimeout(() => {\n      setStage(3);\n    }, 3000);\n  }\n\n  const getIp = (async () => {\n    try {\n      let result = 0;\n      let ip = await publicIp.v4();\n      ip.split(\".\").map((n) => {\n        result += Number(n);\n      })\n      setSecret(result);\n    } catch(err) {\n      setSecret(Number(Math.floor(Math.random() * 100)));\n    }\n  })\n\n  const calculateMoney = () => {\n    const rand = Math.floor(Math.random() * 100);\n    let result = Math.floor(secret / age);\n    let today = new Date();\n    let date = today.getDate();\n\n    if (age == 40) {\n      return\n    }\n\n    if (result == 17) {\n      return 150\n    } else if (Number(result) === Number(date)) {\n      return 200\n    } else if (Number(result) === Number(rand)) {\n      return 300\n    }\n    return result;\n  }\n\n  const calculateResultText = () => {\n    if (age == 10) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>{calculateMoney()} 만원</p>\n          <span style={{fontSize: 20, marginBottom: 10}}>요즘도 세뱃돈으로 장난감 사시나요?</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>삼성전자 몰빵이 답입니다.</span>\n        </>\n      )\n    } else if (age == 20) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>{calculateMoney()} 만원</p>\n          <span style={{fontSize: 20, marginBottom: 10}}>코로나로 뒤숭숭한 요즘,</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>부모님에게 건강식품이라도</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>보내드리는건 어떨까요?</span>\n        </>\n      )\n    } else if (age == 30) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>{calculateMoney()} 만원</p>\n          <span style={{fontSize: 20, marginBottom: 10}}>나이를 생각해야 할 30대,</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>올 한해는 꼭 헬스장을 등록하여</span>\n          <span style={{fontSize: 20, marginBottom: 10}}>건강한 내 자신을 만들어봐요!</span>\n        </>\n      )\n    } else if (age == 40) {\n      return (\n        <>\n          <p style={{fontSize: 30, fontWeight: 700}}>0원</p>\n          <span style={{fontSize: 20}}>이젠..주셔야죠?</span>\n        </>\n      )\n    }\n  }\n\n  const calculateResultImg = () => {\n    if (age == 40) {\n      return <img src={ToothImg} height={200} width={250}/>\n    }\n    return <img src={DollarImg} height={200} width={250}/>\n  }\n\n  useEffect(() => {\n    document.title = \"세뱃돈 예측기\"\n    getIp();\n    // createKakaoButton();\n  }, []);\n\n  return (\n    <section>\n      <div className=\"section\">\n        { stage === 0 ? (\n          <div className=\"first-stage\">\n            <span className=\"title-first\">내가 받을 세뱃돈은?</span>\n            <span className=\"title-second\">올해는 얼마나 받을까..!</span>\n            <div className=\"section-body\">\n              <img src={MoneyImg} height={200} width={250}/>\n              <button className=\"button\" onClick={onClickStartButton}>세뱃돈 예측하기</button>\n            </div>\n          </div>\n        ) : [\n          stage === 1 ? (\n            <div className=\"second-stage\">\n              <span className=\"title-first\">나의 연령대는</span>\n              <div className=\"question-box\">\n                <div className=\"question\" onClick={() => onClickAge(10)}>\n                  1~19세\n                </div>\n                <div className=\"question\" onClick={() => onClickAge(20)}>\n                  20대\n                </div>\n                <div className=\"question\" onClick={() => onClickAge(30)}>\n                  30대\n                </div>\n                <div className=\"question\" onClick={() => onClickAge(40)}>\n                  40대 이상\n                </div>\n              </div>\n            </div>\n          ) : [\n            stage === 2 ? (\n              <div className=\"third-stage\">\n                <Loader\n                  type=\"TailSpin\"\n                  color=\"#00BFFF\"\n                  height={150}\n                  width={150}\n                  // timeout={3000} //3 secs\n                />\n                <ReactTypingEffect\n                  className=\"typing\"\n                  text={[\"예측중.....\"]}\n                  speed={200}\n                  eraseDelay={1000}\n                  typingDelay={100}\n                />\n              </div>\n            ) : (\n              <div className=\"result-stage\">\n                { calculateResultImg() }\n                { calculateResultText() }\n                <div className=\"result-btn-wrap\">\n                  <button className=\"retry-btn\" onClick={() => setStage(0)}>다시하기</button>\n                  <CopyToClipboard \n                    text={\"https://teamhide.github.io/psycho-test\"}\n                    onCopy={() => alert(\"링크 복사 완료!\")}\n                  >\n                    <button className=\"copy-btn\">링크복사</button>\n                  </CopyToClipboard>\n                </div>\n              </div>\n            )\n          ]\n        ]}\n      </div>\n    </section>\n  )\n}\n\nexport default NewYearMoney;","import { BrowserRouter,Route, Link,Switch } from \"react-router-dom\";\nimport NewYearMoney from '../PsychoTest/NewYearMoney';\n\nfunction Main() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}> \n      <div>\n        {/* <Link to=\"/\">홈</Link><br/>\n        <Link to=\"/photo\">사진</Link><br/>\n        <Link to=\"/new-yar\">새뱃돈 얼마?</Link><br/> */}\n        <Switch>             \n          <Route exact path=\"/\" component={NewYearMoney}/> \n          <Route path=\"/new-year\" component={NewYearMoney}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default Main;","import './index.css';\nimport AdSense from 'react-adsense';\n\nfunction Footer() {\n  return (\n    <footer>\n      <AdSense.Google\n        client='ca-pub-8890383931402371'\n        slot='3747311734'\n        style={{width: 522, height: 90, display: \"inline-block\"}}\n      />\n      <div className=\"copyright\">\n        Copyright <a href=\"https://github.com/teamhide\" target=\"_blank\">@teamhide</a>, all right reserved\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { useEffect } from 'react';\n\nfunction App() {\n  useEffect(() => {\n    const script = document.createElement('script')\n    script.src = 'https://developers.kakao.com/sdk/js/kakao.js'\n    script.async = true\n    document.body.appendChild(script)\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}